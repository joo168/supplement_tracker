{"version":3,"sources":["imgs/2.jpg","components/common/Header.js","modules/user.js","containers/common/HeaderContainer.js","lib/styles/palette.js","components/calendar/CalendarViewer.js","components/common/SubHeader.js","modules/calendar.js","modules/add.js","containers/calendar/CalendarContainer.js","components/calendar/Today.js","containers/calendar/TodayContainer.js","components/add/AddList.js","containers/add/AddListContainer.js","pages/CalendarPage.js","components/common/Button.js","components/common/Input.js","components/add/AddViewer.js","containers/add/AddViewerContainer.js","pages/AddPage.js","components/start/StartViewer.js","containers/start/StartContainer.js","pages/StartPage.js","App.js","modules/index.js","index.js"],"names":["module","exports","Header","username","HeaderBlock","to","className","UserInfo","styled","div","setUser","createAction","handleActions","state","action","payload","connect","user","currentUser","localStorage","getItem","result","JSON","parse","e","loadUser","palette","green","CalendarViewer","setSelectedDay","selectedDay","calendar","results","toggle","i","push","date","clone","startOf","add","CalendarViewerBlock","map","c","id","format","key","onClick","SubHeaderBlock","SubHeader","type","subtract","day","initialState","moment","changeColor","color","changeItem","list","remove","setResults","name","checked","concat","lists","filter","item","Today","TodayBlock","style","rows","cols","TodayContainer","AddList","console","log","useState","setC","n","length","I","y","AddListBlock","cursor","CalendarPage","StyledButton","button","props","wider","css","Button","StyledInput","input","Input","AddViewer","target","background","AddViewerBlock","spellCheck","onSubmit","preventDefault","value","onChange","placeholder","AddPage","StartViewer","StartViewerBlock","alert","stringify","setItem","saveUser","window","location","img","StartPage","App","component","path","exact","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1236ce84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2.c53baaf5.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n// import username from '../../modules/user';\r\n\r\n// srfc\r\n\r\nconst Header = ({ username }) => {\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <Link to=\"/\" className=\"logo\">\r\n          SUPPLEMENT_TRACKER\r\n        </Link>\r\n        <div className=\"right\">\r\n          <UserInfo>{username ? username : 'undefined'}</UserInfo>\r\n        </div>\r\n      </HeaderBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst UserInfo = styled.div`\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  font-weight: 500;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst HeaderBlock = styled.div`\r\n  width: cal(100% - 10px);\r\n  max-width: 800px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .logo {\r\n    font-size: 1.2rem;\r\n    font-weight: 800;\r\n    letter-spacing: 2px;\r\n  }\r\n  .right {\r\n    display: flex;\r\n    align-items: center;\r\n    user-select: none;\r\n    /* padding-right: 5px; */\r\n  }\r\n`;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\n// const SAVE_USER = 'user/SAVE_USER';\r\n// const LOAD_USER = 'user/LOAD_USER';\r\nconst SET_USER = 'user/SET_USER';\r\n// const GET_USER = 'user/GET_USER';\r\n\r\n// export const getUser = user => async dispatch => {\r\n//   try {\r\n//     const currentUser = await JSON.stringify(user);\r\n//     localStorage.setItem('username', currentUser);\r\n//     try {\r\n//       const currentUser = localStorage.getItem('username');\r\n//       if (currentUser === null) {\r\n//         return undefined;\r\n//       }\r\n//       const result = await JSON.parse(currentUser);\r\n//       // return JSON.parse(currentUser);\r\n//       console.log(result);\r\n//       // setUser(result);\r\n//       dispatch({\r\n//         type: GET_USER,\r\n//         payload: result,\r\n//       });\r\n//     } catch (e) {\r\n//       // return undefined;\r\n//       console.log(e);\r\n//     }\r\n//   } catch (e) {\r\n//     return undefined;\r\n//   }\r\n// };\r\n\r\n// export const getUser = user => {\r\n//   saveUser(user);\r\n// };\r\n\r\nexport const setUser = createAction(SET_USER, username => username);\r\n\r\nconst initialState = {\r\n  username: '',\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET_USER]: (state, action) => ({\r\n      ...state,\r\n      username: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import React from 'react';\r\nimport Header from '../../components/common/Header';\r\nimport { setUser } from '../../modules/user';\r\nimport { connect } from 'react-redux';\r\n\r\nconst HeaderContainer = ({ username, setUser }) => {\r\n  const loadUser = () => {\r\n    try {\r\n      const currentUser = localStorage.getItem('username');\r\n      if (currentUser === null) {\r\n        return undefined;\r\n      }\r\n      const result = JSON.parse(currentUser);\r\n      setUser(result);\r\n      // return JSON.parse(currentUser);\r\n    } catch (e) {\r\n      return undefined;\r\n      // console.log(e);\r\n    }\r\n  };\r\n  loadUser();\r\n  return <Header username={username} />;\r\n};\r\n\r\nexport default connect(\r\n  ({ user }) => ({\r\n    username: user.username,\r\n  }),\r\n  {\r\n    setUser,\r\n    // getUser,\r\n    // loadUser,\r\n  },\r\n)(HeaderContainer);\r\n\r\n// import React from 'react';\r\n// import Header from '../../components/common/Header';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// const HeaderContainer = () => {\r\n//   const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n//   return <Header user={user} />;\r\n// };\r\n\r\n// export default HeaderContainer;\r\n","const palette = {\r\n  green: [\r\n    '#e6fcf5',\r\n    '#c3fae8',\r\n    '#96f2d7',\r\n    '#63e6be',\r\n    '#38d9a9',\r\n    '#20c997',\r\n    '#12b886',\r\n    '#0ca678',\r\n    '#099268',\r\n    '#087f5b',\r\n  ],\r\n};\r\n\r\nexport default palette;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdChevronLeft, MdChevronRight, MdAlarmOn } from 'react-icons/md';\r\nimport palette from '../../lib/styles/palette';\r\nimport moment from 'moment';\r\n// import CalendarList from '../add/AddList';\r\n// import AddList from '../add/AddList';\r\n\r\nconst CalendarViewer = ({ setSelectedDay, selectedDay, results, toggle }) => {\r\n  // 아, 선택된 날짜의, 주의 시작을, 날짜 단위로 알려주는듯.\r\n  // let startday = selectedDay\r\n  //   .clone()\r\n  //   .startOf('week')\r\n  const calendar = [];\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    calendar.push({\r\n      i: i,\r\n      date: selectedDay\r\n        .clone()\r\n        .startOf('week')\r\n        .add(i, 'day'),\r\n      // week: startday.clone.add(i, 'day').format('w'),\r\n      // day: startday.clone.add(i, 'day').format('ddd'),\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <CalendarViewerBlock>\r\n        <div className=\"row\">\r\n          <div className=\"box2\">\r\n            <span className=\"text SUN\">SUN</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text MON\">MON</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text TUE\">TUE</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text WED\">WED</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text THU\">THU</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text FRI\">FRI</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text SAT\">SAT</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          {calendar.map(c => (\r\n            <div\r\n              className=\"box\"\r\n              id={\r\n                c.date.format('YYYYMMDD') === selectedDay.format('YYYYMMDD')\r\n                  ? 'selected'\r\n                  : ''\r\n              }\r\n              key={c.i}\r\n            >\r\n              <span className=\"text\" onClick={() => setSelectedDay(c.date)}>\r\n                {c.date.format('D')}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"list-container\">\r\n          <div className=\"list-header\">\r\n            {/* <div className=\"icon\">\r\n              <MdAlarmOn />\r\n            </div> */}\r\n            TODAY's\r\n          </div>\r\n          {/* <div className=\"list-contents\"> */}\r\n          {/* <AddList results={results} toggle={toggle} type=\"calendar\" /> */}\r\n          {/* </div> */}\r\n        </div>\r\n      </CalendarViewerBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalendarViewer;\r\n\r\nconst CalendarViewerBlock = styled.div`\r\n  background-color: #e9ecef;\r\n  padding: 5px 20px 0px;\r\n  margin: 0rem 2.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* justify-content: center; */\r\n  align-content: center;\r\n  .row {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .box2 {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: calc(90% / 7);\r\n      font-size: 0.8rem;\r\n      &:first-child > .text {\r\n        color: red;\r\n      }\r\n      &:last-child > .text {\r\n        color: #588dff;\r\n      }\r\n      .text {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        border-radius: 100%;\r\n        font-weight: 490;\r\n        color: gray;\r\n      }\r\n    }\r\n    #selected {\r\n      .text {\r\n        background-color: ${palette.green[5]};\r\n        color: white;\r\n      }\r\n    }\r\n    .box {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: calc(90% / 7);\r\n      font-size: 1rem;\r\n      &:first-child > .text {\r\n        color: red;\r\n      }\r\n      &:last-child > .text {\r\n        color: #588dff;\r\n      }\r\n\r\n      .text {\r\n        font-weight: 650;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        border-radius: 100%;\r\n        cursor: pointer;\r\n        color: gray;\r\n        &:hover {\r\n          background-color: rgba(${palette.green[5]}, 0.1);\r\n          /* 색이 안나타남.. 나중에 조정하기 */\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .list-container {\r\n    margin-top: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    /* padding: 15px 5px; */\r\n    max-width: 550px;\r\n    /* min-width: 450px; */\r\n    /* min-height: 200px; */\r\n    .list-header {\r\n      display: flex;\r\n      justify-content: center;\r\n      /* align-items: center; */\r\n      /* color: ${palette.green[6]}; */\r\n      color: '#495057';\r\n      font-weight: 540;\r\n      /* height: 10%; */\r\n      font-family: Geneva, Tahoma, sans-serif;\r\n      letter-spacing: 0.1px;\r\n      font-size: 14px;\r\n      /* padding-right: 70%; */\r\n      .icon {\r\n        font-size: 20px;\r\n        padding-right: 4px;\r\n        padding-bottom: 5px;\r\n      }\r\n    }\r\n    .list-contents {\r\n      display: flex;\r\n      flex-direction: column;\r\n      border: 1.5px solid lightgray;\r\n      border-radius: 15px;\r\n      padding: 10px;\r\n      width: 75%;\r\n      height: 10px;\r\n      /* height: 90%; */\r\n      .list {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 5px;\r\n      }\r\n      .result-list {\r\n        font-size: 15px;\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n      }\r\n      .toggle {\r\n        padding-top: 3px;\r\n      }\r\n      /* } */\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TiDocumentAdd } from 'react-icons/ti';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaCalendarCheck } from 'react-icons/fa';\r\n\r\nconst SubHeader = ({ type, setSelectedDay, selectedDay }) => {\r\n  const onClickLeft = () => {\r\n    setSelectedDay(selectedDay.clone().subtract(7, 'day'));\r\n  };\r\n  const onClickRight = () => {\r\n    setSelectedDay(selectedDay.clone().add(7, 'day'));\r\n  };\r\n\r\n  return (\r\n    <SubHeaderBlock>\r\n      {type === 'calendar' ? (\r\n        <div className=\"header\">\r\n          <div className=\"subheader\">\r\n            <span className=\"title\">{selectedDay.format('MMMM D')}</span>\r\n            <button className=\"week-left\" onClick={onClickLeft}>\r\n              <MdChevronLeft />\r\n            </button>\r\n            <button className=\"week-right\" onClick={onClickRight}>\r\n              <MdChevronRight />\r\n            </button>\r\n          </div>\r\n          <Link to=\"/add\">\r\n            <button className=\"toAdd\">\r\n              <TiDocumentAdd />\r\n              <span className=\"tooltiptext\">Add 페이지로 이동하기</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className=\"header\">\r\n          <span className=\"title\">Add Your Daily Supplement!</span>\r\n          <Link to=\"/calendar\">\r\n            <button className=\"toCal\">\r\n              <FaCalendarCheck />\r\n              <span className=\"tooltiptext\">Calendar 페이지로 이동하기</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </SubHeaderBlock>\r\n  );\r\n};\r\n\r\nconst SubHeaderBlock = styled.div`\r\n  user-select: none;\r\n  margin: 5%;\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: none;\r\n    font-size: 15px;\r\n    border-radius: 4px;\r\n    padding: 4px 9px;\r\n    margin: 0 3px;\r\n    display: inline-flex;\r\n    &.toAdd:hover .tooltiptext {\r\n      visibility: visible;\r\n    }\r\n    &.toCal:hover .tooltiptext {\r\n      visibility: visible;\r\n    }\r\n  }\r\n\r\n  .toAdd,\r\n  .toCal {\r\n    background: transparent;\r\n    position: relative;\r\n    display: inline-block;\r\n    .tooltiptext {\r\n      font-size: 10px;\r\n      visibility: hidden;\r\n      width: 140px;\r\n      background-color: black;\r\n      color: #fff;\r\n      text-align: center;\r\n      border-radius: 6px;\r\n      padding: 5px 0;\r\n\r\n      position: absolute;\r\n      z-index: 1;\r\n      top: 90%;\r\n      left: 50%;\r\n      margin-left: -60px;\r\n    }\r\n  }\r\n  .toAdd {\r\n    font-size: 18px;\r\n  }\r\n  .toCal {\r\n    font-size: 15px;\r\n  }\r\n\r\n  span.title {\r\n    padding: 4px;\r\n    font-size: 1.1rem;\r\n    font-weight: 540;\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  }\r\n`;\r\n\r\nexport default SubHeader;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport moment from 'moment';\r\n\r\nconst SET_SELECTED_DAY = 'calendar/SET_SELECTED_DAY';\r\n\r\nexport const setSelectedDay = createAction(SET_SELECTED_DAY, day => day);\r\n\r\nconst initialState = {\r\n  selectedDay: moment(),\r\n};\r\n\r\nconst calendar = handleActions(\r\n  {\r\n    [SET_SELECTED_DAY]: (state, action) => ({\r\n      ...state,\r\n      selectedDay: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default calendar;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n// import { call, put, takeLatest } from 'redux-saga/effects';\r\n// import * as api from '../lib/api';\r\n// import { startLoading, finishLoading } from './loading';\r\n// import selectedDay from './calendar';\r\n// import moment from 'moment';\r\n\r\nconst CHANGE_COLOR = 'add/CHANGE_COLOR';\r\nconst CHANGE_ITEM = 'add/CHANGE_ITEM';\r\nconst SET_RESULTS = 'add/SET_RESULTS';\r\nconst TOGGLE = 'add/TOGGLE';\r\nconst REMOVE = 'add/REMOVE';\r\n\r\nexport const changeColor = createAction(CHANGE_COLOR, color => color);\r\nexport const changeItem = createAction(CHANGE_ITEM, list => list);\r\nexport const toggle = createAction(TOGGLE, id => id);\r\nexport const remove = createAction(REMOVE, id => id);\r\n\r\nlet id = 3;\r\nexport const setResults = createAction(SET_RESULTS, (name, color) => ({\r\n  // ID: ID++,\r\n  id: id++,\r\n  name: name,\r\n  checked: false,\r\n  color: color,\r\n}));\r\n\r\n// function* getSearchSaga(action) {\r\n//   //   yield put(startLoading(GET_SEARCH));\r\n//   try {\r\n//     const search = yield call(api.getSearch, action.payload);\r\n//     yield put({\r\n//       type: GET_SEARCH_SUCCESS,\r\n//       payload: search.data,\r\n//     });\r\n//     console.log(action.payload);\r\n//   } catch (e) {\r\n//     yield put({\r\n//       type: GET_SEARCH_FAILURE,\r\n//       payload: e,\r\n//       error: true,\r\n//     });\r\n//     console.log(api.getSearch);\r\n//   }\r\n//   //   yield put(finishLoading(GET_SEARCH));\r\n// }\r\n\r\n// export function* searchSaga() {\r\n//   yield takeLatest(GET_SEARCH, getSearchSaga);\r\n// }\r\nconst initialState = {\r\n  item: '',\r\n  color: 'black',\r\n  results: [\r\n    {\r\n      // ID: 1,\r\n      id: 1,\r\n      name: '유산균',\r\n      checked: true,\r\n      color: 'black',\r\n    },\r\n    {\r\n      // ID: 2,\r\n      id: 2,\r\n      name: '오메가',\r\n      checked: false,\r\n      color: 'black',\r\n    },\r\n  ],\r\n  lists: [],\r\n};\r\n\r\nconst add = handleActions(\r\n  {\r\n    [SET_RESULTS]: (state, { payload: result }) => ({\r\n      ...state,\r\n      results: state.results.concat(result),\r\n    }),\r\n    [CHANGE_COLOR]: (state, action) => ({\r\n      ...state,\r\n      color: action.payload,\r\n    }),\r\n    [TOGGLE]: (state, { payload: id }) => ({\r\n      ...state,\r\n      lists: state.lists.map(list =>\r\n        list.id === id ? { ...list, checked: !list.checked } : list,\r\n      ),\r\n    }),\r\n    [REMOVE]: (state, { payload: id }) => ({\r\n      ...state,\r\n      results: state.results.filter(result => result.id !== id),\r\n    }),\r\n    [CHANGE_ITEM]: (state, action) => ({\r\n      ...state,\r\n      item: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default add;\r\n","import React from 'react';\r\nimport HeaderContainer from '../common/HeaderContainer';\r\nimport CalendarViewer from '../../components/calendar/CalendarViewer';\r\nimport SubHeader from '../../components/common/SubHeader';\r\nimport { setSelectedDay } from '../../modules/calendar';\r\nimport { toggle } from '../../modules/add';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CalendarContainer = ({\r\n  toggle,\r\n  results,\r\n  selectedDay,\r\n  setSelectedDay,\r\n}) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <SubHeader\r\n        type=\"calendar\"\r\n        setSelectedDay={setSelectedDay}\r\n        selectedDay={selectedDay}\r\n      />\r\n      <CalendarViewer\r\n        toggle={toggle}\r\n        results={results}\r\n        setSelectedDay={setSelectedDay}\r\n        selectedDay={selectedDay}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ calendar, add }) => ({\r\n    selectedDay: calendar.selectedDay,\r\n    toggle: calendar.toggle,\r\n    results: add.results,\r\n  }),\r\n  {\r\n    setSelectedDay,\r\n    toggle,\r\n  },\r\n)(CalendarContainer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IoMdFlower } from 'react-icons/io';\r\n\r\nconst Today = () => {\r\n  return (\r\n    <TodayBlock>\r\n      <div className=\"header\">\r\n        <div className=\"icon\" style={{ color: '#ffa8a8' }}>\r\n          <IoMdFlower />\r\n        </div>\r\n        <label className=\"label\">오늘 몸 상태를 적어 보세요</label>\r\n      </div>\r\n      <textarea className=\"story\" rows=\"3\" cols=\"35\"></textarea>\r\n    </TodayBlock>\r\n  );\r\n};\r\n\r\nexport default Today;\r\n\r\nconst TodayBlock = styled.div`\r\n  /* box-shadow: 0px -2px rgba(0, 0, 0, 0.1); */\r\n  margin: 10px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .header {\r\n    display: flex;\r\n    .icon {\r\n      font-size: 20px;\r\n      padding-right: 4px;\r\n    }\r\n    .label {\r\n      font-size: 15px;\r\n      display: block;\r\n      margin-bottom: 11px;\r\n      font-weight: 570;\r\n      letter-spacing: 0.1px;\r\n      font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n      font-family: 10px;\r\n    }\r\n  }\r\n\r\n  .story {\r\n    outline: none;\r\n    padding: 10px;\r\n    line-height: 1.5;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    box-shadow: 1px 1px 2px lightgray;\r\n    letter-spacing: 0.15px;\r\n    font-size: 11px;\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport Today from '../../components/calendar/Today';\r\n\r\nconst TodayContainer = () => {\r\n  return <Today />;\r\n};\r\n\r\nexport default TodayContainer;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdRemoveCircleOutline, MdRadioButtonUnchecked } from 'react-icons/md';\r\n// import { FaRegKissWinkHeart } from 'react-icons/fa';\r\nimport { TiHeartFullOutline } from 'react-icons/ti';\r\nimport moment from 'moment';\r\n\r\nconst AddList = ({\r\n  color,\r\n  lists,\r\n  type,\r\n  results,\r\n  toggle,\r\n  remove,\r\n  selectedDay,\r\n}) => {\r\n  // for (let g = 0; g < lists.length; g++) {\r\n  //   // const h = lists[g].id % 7; // 나머지를 아이디 순서대로 구함.\r\n  //   if(h = )\r\n  // }\r\n\r\n  console.log(lists);\r\n  const [c, setC] = useState('');\r\n  // if (results.length === '2') {\r\n  //   return;\r\n  //   console.log(lists);\r\n  // } else {\r\n  //   console.log(lists);\r\n  // lists = [];\r\n  if ((lists = [])) {\r\n    for (let n = 0; n < results.length; n++) {\r\n      for (let I = 1; I < 8; I++) {\r\n        // 1~7\r\n        const y = results[n]; // 각각의 result들.\r\n        // 0번째 result, 1번째 result\r\n        lists.push({\r\n          // I: I,\r\n          date: selectedDay\r\n            .clone()\r\n            .startOf('week')\r\n            .add(I - 1, 'day'), // 2일전~5일후 유산균 1~7  / 2일전~5일전 오메가 8~14 / 2일전~5일전 비타민디 15~21\r\n          // 1 8 15 한날에 먹어야 하는 세트. 2 9 16 => id값을 7로 나누었을때 나머지 같은것끼리 묶음.\r\n          // .calendar(),\r\n          // week: startday.clone.add(i, 'day').format('w'),\r\n          // day: startday.clone.add(i, 'day').format('ddd'),\r\n          name: y.name,\r\n          checked: c,\r\n          color: y.color,\r\n          id: n * 7 + I, // 0+1 0+1 0+5 0+7 / 7+1 7+2 7+7 / 14+1\r\n          // h: id % 7,\r\n        });\r\n      }\r\n    }\r\n  } else {\r\n    return;\r\n  }\r\n\r\n  // }\r\n  // };\r\n\r\n  return (\r\n    <AddListBlock>\r\n      <div className=\"result\">\r\n        <ul className=\"list\">\r\n          <div className=\"list-toggle\">\r\n            {type === 'calendar'\r\n              ? lists.map(list =>\r\n                  list.date.format('YYYYMMDD') ===\r\n                  selectedDay.format('YYYYMMDD') ? (\r\n                    <div\r\n                      key={list.id}\r\n                      className=\"toggle\"\r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={() => setC(!c)}\r\n                    >\r\n                      {list.checked ? (\r\n                        <div style={{ color: '#495057' }}>\r\n                          <TiHeartFullOutline />\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <MdRadioButtonUnchecked />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    ''\r\n                  ),\r\n                )\r\n              : ''}\r\n          </div>\r\n          <div className=\"list-contents\">\r\n            {type === 'calendar'\r\n              ? lists.map(list =>\r\n                  list.date.format('YYYYMMDD') ===\r\n                  selectedDay.format('YYYYMMDD') ? (\r\n                    <li\r\n                      id={list.id}\r\n                      style={{ color: list.color }}\r\n                      className={\r\n                        list.checked ? 'lineThrough list-list' : 'list-list'\r\n                      }\r\n                    >\r\n                      {list.name}\r\n                      {/* {list.date.format('MMDD')} */}\r\n                    </li>\r\n                  ) : (\r\n                    ''\r\n                  ),\r\n                )\r\n              : results.map(result => (\r\n                  <li\r\n                    id={result.id}\r\n                    className=\"list-list\"\r\n                    style={{ color: result.color }}\r\n                  >\r\n                    {result.name}\r\n                  </li>\r\n                ))}\r\n          </div>\r\n          <div className=\"list-remove\">\r\n            {results.map(result => (\r\n              <div>\r\n                {type === 'add' ? (\r\n                  <div\r\n                    className=\"remove\"\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => remove(result.id)}\r\n                  >\r\n                    <MdRemoveCircleOutline />\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    </AddListBlock>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n\r\nconst AddListItem = ({ list, a, toggle, remove, type, selectedDay }) => {\r\n  return (\r\n    <AddListItemBlock>\r\n      <div className={type === 'add' ? 'add' : 'calendar'}></div>\r\n    </AddListItemBlock>\r\n  );\r\n};\r\n\r\nconst AddListBlock = styled.div`\r\n  .list {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    display: flex;\r\n    line-height: 1.7rem;\r\n    .list-toggle {\r\n      width: 10%;\r\n      margin: 0;\r\n      /* margin-top: 5px; */\r\n      .toggle {\r\n        margin-bottom: 5px;\r\n        height: 28px;\r\n      }\r\n    }\r\n    .list-contents {\r\n      width: 80%;\r\n      margin: 0;\r\n      .list-list {\r\n        border-bottom: 1.5px solid lightgray;\r\n        margin-bottom: 3.5x;\r\n        height: 28px;\r\n        /* margin: 0rem 2.5rem; */\r\n      }\r\n    }\r\n    .list-remove {\r\n      width: 10%;\r\n      margin: 0;\r\n      .remove {\r\n        height: 28px;\r\n        margin-bottom: 5px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .lineThrough {\r\n    text-decoration: line-through #495057;\r\n  }\r\n  .list-list {\r\n  }\r\n  background-color: #e9ecef;\r\n  padding: 5px 20px 20px;\r\n  margin: 0rem 2.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .result {\r\n    padding: 15px;\r\n    border: 1.5px solid lightgray;\r\n    width: 90%;\r\n    max-width: 250px;\r\n    margin: 0rem 1.2rem 0.8rem;\r\n    min-height: 150px;\r\n    text-align: center;\r\n    border-radius: 15px;\r\n  }\r\n`;\r\n\r\nconst AddListItemBlock = styled.div`\r\n  /* margin: 0 30px 0 0; */\r\n  padding: 3px;\r\n  /* background-color: #e9ecef;\r\n  padding: 5px 20px 0px;\r\n  margin: 0rem 2.5rem;\r\n  \r\n  align-items: center;\r\n  flex-direction: column; */\r\n  display: flex;\r\n  .add {\r\n    padding-left: 10px;\r\n    list-style-type: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 120px;\r\n    font-size: 15px;\r\n    margin: 3px 0px;\r\n    border-bottom: 1px solid lightgray;\r\n  }\r\n  /* flex-direction: column; */\r\n  /* .result {\r\n    width: 100%;\r\n    margin: 10px;\r\n    width: 10%;\r\n    border: 1px solid black;\r\n  } */\r\n  /* } */\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport AddList from '../../components/add/AddList';\r\nimport HeaderContainer from '../common/HeaderContainer';\r\nimport SubHeader from '../../components/common/SubHeader';\r\nimport { remove, toggle } from '../../modules/add';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddListContainer = ({\r\n  color,\r\n  type,\r\n  results,\r\n  remove,\r\n  toggle,\r\n  selectedDay,\r\n  lists,\r\n}) => {\r\n  // const { item, color } = useSelector(({ add }) => ({\r\n  //   item: add.item,\r\n  //   color: add.color,\r\n  // }));\r\n  // const dispatch = useDispatch();\r\n  // const addItem = useCallback(item => dispatch(addItem(item)), [dispatch]);\r\n  // const changeColor = useCallback(e => dispatch(changeColor(e)), [dispatch]);\r\n  // const changeItem = useCallback(e => dispatch(changeItem(e)), [dispatch]);\r\n  return (\r\n    <>\r\n      <AddList\r\n        selectedDay={selectedDay}\r\n        results={results}\r\n        remove={remove}\r\n        toggle={toggle}\r\n        type={type}\r\n        color={color}\r\n        lists={lists}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ add, calendar }) => ({\r\n    results: add.results,\r\n    color: add.color,\r\n    lists: add.lists,\r\n    selectedDay: calendar.selectedDay,\r\n  }),\r\n  {\r\n    remove,\r\n    toggle,\r\n  },\r\n)(AddListContainer);\r\n","import React from 'react';\r\nimport CalendarContainer from '../containers/calendar/CalendarContainer';\r\nimport TodayContainer from '../containers/calendar/TodayContainer';\r\nimport AddListContainer from '../containers/add/AddListContainer';\r\n\r\nconst CalendarPage = () => {\r\n  return (\r\n    <>\r\n      <CalendarContainer />\r\n      <AddListContainer type=\"calendar\" />\r\n      <TodayContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst StyledButton = styled.button`\r\n  border: none;\r\n  border-radius: 15px;\r\n  font-size: 1rem;\r\n  padding: 0.3rem 1rem;\r\n  font-weight: 700;\r\n  outline: none;\r\n  color: white;\r\n  background: ${palette.green[5]};\r\n  &:hover {\r\n    background: ${palette.green[7]};\r\n  }\r\n  cursor: pointer;\r\n  /* max-width: 180px; */\r\n\r\n  ${props =>\r\n    props.wider &&\r\n    css`\r\n      padding: 0.7rem 3rem;\r\n      color: white;\r\n      background: ${palette.green[8]};\r\n      &:hover {\r\n        background: ${palette.green[6]};\r\n      }\r\n      border-radius: 15px;\r\n      font-size: 20px;\r\n      margin-top: 15px;\r\n    `}\r\n`;\r\n\r\nconst Button = props => <StyledButton {...props} />;\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  margin-right: 20px;\r\n  width: 60%;\r\n  outline: none;\r\n  /* text-decoration: none; */\r\n  border-left-width: 0;\r\n  border-right-width: 0;\r\n  border-top-width: 0;\r\n  border-bottom-width: 1;\r\n  text-align: center;\r\n  border-color: gray;\r\n  background: transparent;\r\n  ::placeholder {\r\n    color: gray;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Input = props => <StyledInput {...props} />;\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GiMedicines } from 'react-icons/gi';\r\nimport { IoIosList } from 'react-icons/io';\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from '../common/Button';\r\nimport Input from '../common/Input';\r\n\r\nconst AddViewer = ({\r\n  item,\r\n  color,\r\n  // remove,\r\n  // toggle,\r\n  changeColor,\r\n  changeItem,\r\n  // results,\r\n  setResults,\r\n  // selectedDay,\r\n}) => {\r\n  // const save2 = result => {\r\n  //   let id = 3;\r\n  //   const save_result = {\r\n  //     id: id++,\r\n  //     name: result,\r\n  //     checked: false,\r\n  //   };\r\n  //   try {\r\n  //     localStorage.addItem('item', JSON.stringify(save_result));\r\n  //   } catch (e) {\r\n  //     return undefined;\r\n  //   }\r\n  // };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    changeItem('');\r\n\r\n    // changeColor('black');\r\n    // onInsert(item);\r\n    setResults(item, color);\r\n    // save(results);\r\n  };\r\n\r\n  const onChange = e => {\r\n    changeItem(e.target.value);\r\n  };\r\n  const onClick = e => {\r\n    changeColor(e.target.style.background);\r\n  };\r\n  console.log(color);\r\n\r\n  // const save = results => {\r\n  //   try {\r\n  //     localStorage.setItem('item', JSON.stringify(results));\r\n  //     console.log('저장성공');\r\n  //   } catch (e) {\r\n  //     console.log('저장실패');\r\n  //     return undefined;\r\n  //   }\r\n  // };\r\n\r\n  // const load = () => {\r\n  //   try {\r\n  //     if (localStorage.getItem('item')) {\r\n  //     const result = JSON.parse(localStorage.getItem('item'));\r\n  //     // console.log(result[0].name);\r\n  //     // setResults({\r\n  //     //   id: result[0].id,\r\n  //     //   name: result[0].name,\r\n  //     //   checked: result[0].checked,\r\n  //     // });\r\n  //     // setResults(result);\r\n  //     return result;\r\n  //     // 대신에 일일이 넣어줘봤는데 차이가 있는진 잘..\r\n  //     }\r\n  //     return undefined;\r\n  //   } catch (e) {\r\n  //     return undefined;\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   load();\r\n\r\n  //   // setResults(result);\r\n  //   return () => {\r\n  //     save(results);\r\n  //     // console.log(localStorage);\r\n  //     // 왜 따라가는게 한발 느리니...? // 뒷정리 함수. 197\r\n  //   };\r\n  // }, [results]);\r\n\r\n  return (\r\n    <AddViewerBlock>\r\n      <form className=\"container\" spellCheck=\"false\" onSubmit={onSubmit}>\r\n        <div className=\"icon\">\r\n          <GiMedicines />\r\n        </div>\r\n        <Input\r\n          value={item}\r\n          onChange={onChange}\r\n          placeholder=\"추가할 영양제를 입력하세요\"\r\n          type=\"text\"\r\n          style={{ color: color }}\r\n        />\r\n        <Button type=\"submit\">ADD</Button>\r\n      </form>\r\n\r\n      <div className=\"color-select\">\r\n        <div\r\n          className=\"color one\"\r\n          style={{ background: '#fa5252' }}\r\n          onClick={onClick}\r\n        ></div>\r\n        <div\r\n          className=\"color two\"\r\n          style={{ background: '#fab005' }}\r\n          onClick={onClick}\r\n        ></div>\r\n        <div\r\n          className=\"color three\"\r\n          style={{ background: '#20c997' }}\r\n          onClick={onClick}\r\n        ></div>\r\n        <div\r\n          className=\"color four\"\r\n          style={{ background: '#4dabf7' }}\r\n          onClick={onClick}\r\n        ></div>\r\n        <div\r\n          className=\"color five\"\r\n          style={{ background: 'black' }}\r\n          onClick={onClick}\r\n        ></div>\r\n      </div>\r\n      {/* <div className=\"result\"> */}\r\n      <div className=\"header\">\r\n        <div className=\"icon2\">\r\n          <IoIosList />\r\n        </div>\r\n        <p className=\"title\">My Supplements</p>\r\n      </div>\r\n      {/* </div> */}\r\n    </AddViewerBlock>\r\n  );\r\n};\r\n\r\nexport default AddViewer;\r\n\r\nconst AddViewerBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* justify-content: center; */\r\n  background-color: #e9ecef;\r\n  padding: 5px 20px 0px;\r\n  margin: 0rem 2.5rem;\r\n  align-items: center;\r\n  /* .result { */\r\n    /* border: 1.5px solid lightgray;\r\n    width: 90%;\r\n    max-width: 250px;\r\n    margin: 1rem 1.2rem;\r\n    min-height: 150px;\r\n    text-align: center;\r\n    border-radius: 15px; */\r\n    .header {\r\n      display: flex;\r\n      align-items: center;\r\n      .title {\r\n        font-size: 1.05rem;\r\n        text-align: center;\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n        /* color: ${palette.green[5]}; */\r\n      }\r\n      .icon2 {\r\n        /* color: ${palette.green[5]}; */\r\n        font-size: 22px;\r\n        margin-right: 4px;\r\n        margin-top: 5px;\r\n      }\r\n    }\r\n  /* } */\r\n  .color-select {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin-right: 3.2rem;\r\n    /* border: 2px solid lightgray; */\r\n    border-radius: 20px;\r\n    width: 45%;\r\n    height: 30px;\r\n    text-align: center;\r\n    .color {\r\n      width: 15px;\r\n      height: 15px;\r\n      border-radius: 100%;\r\n      box-shadow: 20px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .container {\r\n    display: flex;\r\n    padding: 5px;\r\n    margin: 1.5rem 0 0.5rem;\r\n    width: 90%;\r\n    min-width: 310px;\r\n    max-width: 550px;\r\n    height: 30px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .icon {\r\n      color: ${palette.green[5]};\r\n      font-size: 28px;\r\n      margin: 10px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport AddViewer from '../../components/add/AddViewer';\r\nimport HeaderContainer from '../common/HeaderContainer';\r\nimport SubHeader from '../../components/common/SubHeader';\r\nimport {\r\n  changeColor,\r\n  changeItem,\r\n  setResults,\r\n  remove,\r\n  toggle,\r\n} from '../../modules/add';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddViewerContainer = ({\r\n  item,\r\n  color,\r\n  // results,\r\n  setResults,\r\n  changeColor,\r\n  changeItem,\r\n  // remove,\r\n  // toggle,\r\n  // selectedDay,\r\n}) => {\r\n  // const { item, color } = useSelector(({ add }) => ({\r\n  //   item: add.item,\r\n  //   color: add.color,\r\n  // }));\r\n  // const dispatch = useDispatch();\r\n  // const addItem = useCallback(item => dispatch(addItem(item)), [dispatch]);\r\n  // const changeColor = useCallback(e => dispatch(changeColor(e)), [dispatch]);\r\n  // const changeItem = useCallback(e => dispatch(changeItem(e)), [dispatch]);\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <SubHeader type=\"editor\" />\r\n      <AddViewer\r\n        // selectedDay={selectedDay}\r\n        item={item}\r\n        color={color}\r\n        // results={results}\r\n        changeColor={changeColor}\r\n        changeItem={changeItem}\r\n        setResults={setResults}\r\n        // remove={remove}\r\n        // toggle={toggle}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ add }) => ({\r\n    item: add.item,\r\n    color: add.color,\r\n    // results: add.results,\r\n    // selectedDay: calendar.selectedDay,\r\n  }),\r\n  {\r\n    changeColor,\r\n    changeItem,\r\n    setResults,\r\n    // remove,\r\n    // toggle,\r\n  },\r\n)(AddViewerContainer);\r\n","import React from 'react';\r\nimport AddViewerContainer from '../containers/add/AddViewerContainer';\r\nimport AddListContainer from '../containers/add/AddListContainer';\r\n\r\nconst AddPage = () => {\r\n  return (\r\n    <>\r\n      <AddViewerContainer />\r\n      <AddListContainer type=\"add\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPage;\r\n","import React from 'react';\r\nimport Button from '../../components/common/Button';\r\nimport styled from 'styled-components';\r\nimport img from '../../imgs/2.jpg';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StartViewer = ({ username, setUser }) => {\r\n  const onChange = e => {\r\n    setUser(e.target.value);\r\n    console.log(username);\r\n  };\r\n\r\n  const saveUser = username => {\r\n    try {\r\n      const currentUser = JSON.stringify(username);\r\n      localStorage.setItem('username', currentUser);\r\n    } catch (e) {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  // const loadUser = () => {\r\n  //   try {\r\n  //     const currentUser = localStorage.getItem('username');\r\n  //     if (currentUser === null) {\r\n  //       return undefined;\r\n  //     }\r\n  //     const result = JSON.parse(currentUser);\r\n  //     // return JSON.parse(currentUser);\r\n  //     // setUser(result);\r\n  //   } catch (e) {\r\n  //     return undefined;\r\n  //   }\r\n  // };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    alert('입력하신 이름이 ' + username + ' 인가요?');\r\n    saveUser(username);\r\n    // loadUser();\r\n    window.location = '/calendar';\r\n  };\r\n\r\n  return (\r\n    <StartViewerBlock>\r\n      <div className=\"bg\"></div>\r\n      <p>GET STARTED</p>\r\n      <div className=\"greeting\">Make Your Daily Life More Energetic!</div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"askName 1\" type=\"submit\">\r\n          <input\r\n            // value={username}\r\n            onChange={onChange}\r\n            className=\"underline\"\r\n            placeholder=\"what's your name?\"\r\n          />\r\n        </div>\r\n        <div className=\"askName 2\">\r\n          {/* <Link to=\"/calendar\"> */}\r\n          <Button wider>Welcome!</Button>\r\n          {/* </Link> */}\r\n        </div>\r\n      </form>\r\n    </StartViewerBlock>\r\n  );\r\n};\r\n\r\nexport default StartViewer;\r\n\r\nconst StartViewerBlock = styled.div`\r\n  background-image: url(${img});\r\n  background-size: cover;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  /* display: block; */\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: 0;\r\n\r\n  .bg {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    z-index: -10;\r\n  }\r\n  p {\r\n    color: #f1f3f5;\r\n    font-weight: 650;\r\n    font-size: 5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 0;\r\n    margin-top: 15%;\r\n  }\r\n  .greeting {\r\n    color: ${palette.green[5]};\r\n    /* color: #ffec99; */\r\n    font-weight: 500;\r\n    font-size: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .askName {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  input {\r\n    margin-top: 40px;\r\n    outline: none;\r\n    text-align: center;\r\n    color: white;\r\n    background: rgba(0, 0, 0, 0);\r\n    border-color: white;\r\n    font-size: 20px;\r\n    border-left-width: 0;\r\n    border-right-width: 0;\r\n    border-top-width: 0;\r\n    border-bottom-width: 1;\r\n    ::placeholder {\r\n      color: white;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport StartViewer from '../../components/start/StartViewer';\r\nimport { setUser } from '../../modules/user';\r\nimport { connect } from 'react-redux';\r\n\r\nconst StartContainer = ({ username, setUser }) => {\r\n  // const { username } = useSelector(({ user }) => ({\r\n  //   username: user.username,\r\n  // }));\r\n  // const dispatch = useDispatch();\r\n  // const setUser = useCallback(username => dispatch(setUser(username)), [\r\n  //   dispatch,\r\n  // ]);\r\n  // const saveUser = useCallback(user => dispatch(saveUser(user)), [dispatch]);\r\n  // const getUser = useCallback(user => dispatch(loadUser(user)), [dispatch]);\r\n\r\n  return (\r\n    <StartViewer\r\n      setUser={setUser}\r\n      // saveUser={saveUser}\r\n      // getUser={getUser}\r\n      username={username}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ user }) => ({\r\n    username: user.username,\r\n  }),\r\n  {\r\n    setUser,\r\n    // saveUser,\r\n    // getUser,\r\n  },\r\n)(StartContainer);\r\n","import React from 'react';\r\nimport StartContainer from '../containers/start/StartContainer';\r\n\r\nconst StartPage = () => {\r\n  return <StartContainer />;\r\n};\r\n\r\nexport default StartPage;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CalendarPage from './pages/CalendarPage';\nimport AddPage from './pages/AddPage';\nimport StartPage from './pages/StartPage';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Route component={StartPage} path=\"/\" exact />\n      <Route component={CalendarPage} path=\"/calendar\" />\n      <Route component={AddPage} path=\"/add\" />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport user from './user';\r\nimport calendar from './calendar';\r\n// import loading from './loading';\r\nimport add from './add';\r\n// import { all } from 'redux-saga/effects';\r\n\r\nconst rootReducer = combineReducers({\r\n  calendar,\r\n  user,\r\n  //   loading,\r\n  add,\r\n});\r\n\r\n// export function* rootSaga() {\r\n//   yield all([searchSaga()]);\r\n// }\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import Header from './components/common/Header';\n// import createSagaMiddleware from 'redux-saga';\n\n// const sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeWithDevTools());\n// sagaMiddleware.run(rootSaga);\n\n// store.subscribe(Header);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}